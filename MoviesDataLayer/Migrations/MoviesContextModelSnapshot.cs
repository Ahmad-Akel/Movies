// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesDataLayer.UWP;

namespace MoviesDataLayer.UWP.Migrations
{
    [DbContext(typeof(MoviesContext))]
    partial class MoviesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Categories", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("CatId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CatId");

                    b.Property<string>("Image");

                    b.Property<double>("Price");

                    b.Property<string>("Title");

                    b.HasKey("MovieId");

                    b.HasIndex("CatId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Permissions", b =>
                {
                    b.Property<int>("PermessionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Role");

                    b.HasKey("PermessionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Subsecribe", b =>
                {
                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Price");

                    b.Property<string>("Type");

                    b.HasKey("SubId");

                    b.ToTable("Subsecribes");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("EndDate");

                    b.Property<bool>("Is_Sub");

                    b.Property<string>("Password");

                    b.Property<int?>("PermessionId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("SubId");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.HasIndex("PermessionId");

                    b.HasIndex("SubId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.UserFavMovies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MovieId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.UserOwnedMovies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MovieId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("OwnedMovies");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Movie", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CatId");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.User", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.Permissions", "Permissions")
                        .WithMany()
                        .HasForeignKey("PermessionId");

                    b.HasOne("MoviesDataLayer.UWP.Models.Subsecribe", "Subsecribtion")
                        .WithMany()
                        .HasForeignKey("SubId");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.UserFavMovies", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoviesDataLayer.UWP.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.UserOwnedMovies", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoviesDataLayer.UWP.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
