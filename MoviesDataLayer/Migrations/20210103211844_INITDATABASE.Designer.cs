// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesDataLayer.UWP;

namespace MoviesDataLayer.UWP.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20210103211844_INITDATABASE")]
    partial class INITDATABASE
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Categories", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MovieId");

                    b.Property<string>("Name");

                    b.HasKey("CatId");

                    b.HasIndex("MovieId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MoviesCardCardId");

                    b.Property<double>("Price");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.Property<int?>("UserId1");

                    b.HasKey("MovieId");

                    b.HasIndex("MoviesCardCardId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.MoviesCard", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("TotalPrice");

                    b.Property<int>("UserId");

                    b.HasKey("CardId");

                    b.HasIndex("UserId");

                    b.ToTable("MoviesCard");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Permissions", b =>
                {
                    b.Property<int>("PermessionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Role");

                    b.HasKey("PermessionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Subsecribe", b =>
                {
                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Price");

                    b.Property<string>("Type");

                    b.HasKey("SubId");

                    b.ToTable("Subsecribes");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("Is_Sub");

                    b.Property<string>("Password");

                    b.Property<int?>("PermessionId");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("SubId");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.HasIndex("PermessionId");

                    b.HasIndex("SubId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Categories", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.Movie")
                        .WithMany("Categories")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.Movie", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.MoviesCard")
                        .WithMany("Movies")
                        .HasForeignKey("MoviesCardCardId");

                    b.HasOne("MoviesDataLayer.UWP.Models.User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId");

                    b.HasOne("MoviesDataLayer.UWP.Models.User")
                        .WithMany("OwnedMovies")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.MoviesCard", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoviesDataLayer.UWP.Models.User", b =>
                {
                    b.HasOne("MoviesDataLayer.UWP.Models.Permissions", "Permissions")
                        .WithMany()
                        .HasForeignKey("PermessionId");

                    b.HasOne("MoviesDataLayer.UWP.Models.Subsecribe", "Subsecribtion")
                        .WithMany()
                        .HasForeignKey("SubId");
                });
#pragma warning restore 612, 618
        }
    }
}
